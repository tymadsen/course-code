#/* $begin ncopy-ys */
##################################################################
# ncopy.ys - Copy a src block of len ints to dst.
# Return the number of positive ints (>0) contained in src.
#
# Include your name and ID here.
# Ty Madsen
# ID: tmadsen2
#
# Describe how and why you modified the baseline code.
#
#	I modified this code, to utilize the IADDL instruction and make set jumps to expect to be taken.
#	I just want some sweet points!
#
#
##################################################################
	# Function prologue. Do not modify.
ncopy:	pushl %ebp		# Save old frame pointer
	rrmovl %esp,%ebp	# Set up new frame pointer
	pushl %esi		# Save callee-save regs
	pushl %ebx
	mrmovl 8(%ebp),%ebx	# src
	mrmovl 12(%ebp),%ecx	# dst
	mrmovl 16(%ebp),%edx	# len

	# Loop header
	xorl %esi,%esi		# count = 0;
	#andl %edx,%edx		# len <= 0?
	#jg Loop				# if not, goto Loop:
	# jmp Loop
	# Loop body.
Loop:	
	mrmovl (%ebx), %eax	# read val from src...
	rmmovl %eax, (%ecx)	# ...and store it to dst
	# andl %eax, %eax		# val <= 0?
	jg Pos
	jle Npos			# if so, goto Npos:
Pos:
	iaddl $1, %esi		# count++
Npos:	
	iaddl $4, %ebx		# src++
	iaddl $4, %ecx		# dst++
	iaddl $-1, %edx		# len--
	#andl %edx,%edx		# len > 0?
	jg Loop				# if so, goto Loop:
	
	# Function epilogue. Do not modify.
Done:	
	rrmovl %esi, %eax
	popl %ebx
	popl %esi
	rrmovl %ebp, %esp
	popl %ebp
	ret
#/* $end ncopy-ys */
