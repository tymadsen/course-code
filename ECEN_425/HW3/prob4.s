; Generated by c86 (BYU-NASM) 5.1 (beta) from prob4.i
	CPU	8086
	ALIGN	2
	jmp	main	; Jump to program start
	ALIGN	2
MyFunction:
	; >>>>> Line:	3
	; >>>>> { 
	jmp	L_prob4_1
L_prob4_2:
	; >>>>> Line:	6
	; >>>>> localWord = argWord; 
	mov	ax, word [bp+4]
	mov	word [bp-2], ax
	; >>>>> Line:	7
	; >>>>> localByte = argByte; 
	mov	al, byte [bp+6]
	mov	byte [bp-3], al
	mov	sp, bp
	pop	bp
	ret
L_prob4_1:
	push	bp
	mov	bp, sp
	sub	sp, 4
	jmp	L_prob4_2
	ALIGN	2
main:
	; >>>>> Line:	10
	; >>>>> int main(){ 
	jmp	L_prob4_4
L_prob4_5:
	; >>>>> Line:	11
	; >>>>> MyFunction(1,2); 
	mov	al, 2
	push	ax
	mov	ax, 1
	push	ax
	call	MyFunction
	add	sp, 4
	; >>>>> Line:	12
	; >>>>> return 0; 
	xor	ax, ax
L_prob4_6:
	mov	sp, bp
	pop	bp
	ret
L_prob4_4:
	push	bp
	mov	bp, sp
	jmp	L_prob4_5
