; Generated by c86 (BYU-NASM) 5.1 (beta) from lab2.i
	CPU	8086
	ALIGN	2
	jmp	main	; Jump to program start
	ALIGN	2
L_lab2_1:
	DW	0
L_lab2_3:
	DB	", j = ",0
L_lab2_2:
	DB	"in a(), i = ",0
	ALIGN	2
a:
	jmp	L_lab2_4
L_lab2_5:
	mov	word [bp-2], 0
	inc	word [L_lab2_1]
	inc	word [bp-2]
	mov	ax, L_lab2_2
	push	ax
	call	printString
	add	sp, 2
	push	word [L_lab2_1]
	call	printInt
	add	sp, 2
	mov	ax, L_lab2_3
	push	ax
	call	printString
	add	sp, 2
	push	word [bp-2]
	call	printInt
	add	sp, 2
	call	printNewLine
	mov	sp, bp
	pop	bp
	ret
L_lab2_4:
	push	bp
	mov	bp, sp
	push	cx
	jmp	L_lab2_5
L_lab2_7:
	DB	"in b()",0xA,0
	ALIGN	2
b:
	jmp	L_lab2_8
L_lab2_9:
	mov	ax, L_lab2_7
	push	ax
	call	printString
	add	sp, 2
	call	a
	mov	sp, bp
	pop	bp
	ret
L_lab2_8:
	push	bp
	mov	bp, sp
	jmp	L_lab2_9
	ALIGN	2
fibonacci:
	jmp	L_lab2_11
L_lab2_12:
	cmp	word [bp+4], 1
	jne	L_lab2_13
	mov	ax, 1
	jmp	L_lab2_14
	jmp	L_lab2_15
L_lab2_13:
	cmp	word [bp+4], 2
	jne	L_lab2_16
	mov	ax, 2
	jmp	L_lab2_14
	jmp	L_lab2_17
L_lab2_16:
	mov	ax, word [bp+4]
	dec	ax
	push	ax
	call	fibonacci
	add	sp, 2
	push	ax
	mov	dx, word [bp+4]
	sub	dx, 2
	push	dx
	call	fibonacci
	mov	dx, ax
	add	sp, 2
	pop	ax
	add	ax, dx
L_lab2_17:
L_lab2_15:
L_lab2_14:
	mov	sp, bp
	pop	bp
	ret
L_lab2_11:
	push	bp
	mov	bp, sp
	jmp	L_lab2_12
L_lab2_20:
	DB	" is ",0
L_lab2_19:
	DB	"Fibonnaci number ",0
	ALIGN	2
main:
	jmp	L_lab2_21
L_lab2_22:
	call	a
	call	b
	mov	word [k], 1
	jmp	L_lab2_24
L_lab2_23:
	mov	ax, L_lab2_19
	push	ax
	call	printString
	add	sp, 2
	push	word [k]
	call	printInt
	add	sp, 2
	mov	ax, L_lab2_20
	push	ax
	call	printString
	add	sp, 2
	push	word [k]
	call	fibonacci
	add	sp, 2
	push	ax
	call	printInt
	add	sp, 2
	call	printNewLine
L_lab2_26:
	inc	word [k]
L_lab2_24:
	cmp	word [k], 10
	jle	L_lab2_23
L_lab2_25:
	mov	sp, bp
	pop	bp
	ret
L_lab2_21:
	push	bp
	mov	bp, sp
	jmp	L_lab2_22
	ALIGN	2
k:
	TIMES	2 db 0
