; Generated by c86 (BYU-NASM) 5.1 (beta) from lab1test.i
	CPU	8086
	ALIGN	2
	jmp	main	; Jump to program start
	ALIGN	2
AsmFunction:
	; >>>>> Line:	5
	; >>>>> wLine(); 
	jmp	L_lab1test_1
L_lab1test_2:
	; >>>>> Line:	6
	; >>>>> return gvar+((a*(b+c))/(d-e)); 
	mov	al, byte [bp+6]
	cbw
	mov	dl, byte [bp+8]
	xchg	ax, dx
	cbw
	xchg	dx, ax
	add	ax, dx
	imul	word [bp+4]
	cwd
	mov	cx, word [bp+10]
	sub	cx, word [bp+12]
	idiv	cx
	add	ax, word [gvar]
L_lab1test_3:
	mov	sp, bp
	pop	bp
	ret
L_lab1test_1:
	push	bp
	mov	bp, sp
	jmp	L_lab1test_2
L_lab1test_8:
	DB	"Result 3 is: ",0
L_lab1test_7:
	DB	"Result 2 is: ",0
L_lab1test_6:
	DB	"Result 1 is: ",0
L_lab1test_5:
	DB	"Hello, world!",0xD,0xA,0
	ALIGN	2
main:
	; >>>>> Line:	10
	; >>>>> { 
	jmp	L_lab1test_9
L_lab1test_10:
	; >>>>> Line:	11
	; >>>>> gvar = 0; 
	mov	word [gvar], 0
	; >>>>> Line:	13
	; >>>>> printString("Hello, world!\r\n"); 
	mov	ax, L_lab1test_5
	push	ax
	call	printString
	add	sp, 2
	; >>>>> Line:	15
	; >>>>> gvar = AsmFunction(10, 35, 3, 123, 100); 
	mov	ax, 100
	push	ax
	mov	ax, 123
	push	ax
	mov	al, 3
	push	ax
	mov	al, 35
	push	ax
	mov	ax, 10
	push	ax
	call	AsmFunction
	add	sp, 10
	mov	word [gvar], ax
	; >>>>> Line:	16
	; >>>>> print("Result 1 is: ", 13); 
	mov	ax, 13
	push	ax
	mov	ax, L_lab1test_6
	push	ax
	call	print
	add	sp, 4
	; >>>>> Line:	17
	; >>>>> printInt(gvar); 
	push	word [gvar]
	call	printInt
	add	sp, 2
	; >>>>> Line:	18
	; >>>>> printNewLine(); 
	call	printNewLine
	; >>>>> Line:	20
	; >>>>> gvar = AsmFunction(14, -10, 126, 32, 15); 
	mov	ax, 15
	push	ax
	mov	ax, 32
	push	ax
	mov	al, 126
	push	ax
	mov	al, -10
	push	ax
	mov	ax, 14
	push	ax
	call	AsmFunction
	add	sp, 10
	mov	word [gvar], ax
	; >>>>> Line:	21
	; >>>>> print("Result 2 is: ", 13); 
	mov	ax, 13
	push	ax
	mov	ax, L_lab1test_7
	push	ax
	call	print
	add	sp, 4
	; >>>>> Line:	22
	; >>>>> printInt(gvar); 
	push	word [gvar]
	call	printInt
	add	sp, 2
	; >>>>> Line:	23
	; >>>>> printNewLine(); 
	call	printNewLine
	; >>>>> Line:	25
	; >>>>> gvar = AsmFunction(17, 18, -121, 130, 118); 
	mov	ax, 118
	push	ax
	mov	ax, 130
	push	ax
	mov	al, -121
	push	ax
	mov	al, 18
	push	ax
	mov	ax, 17
	push	ax
	call	AsmFunction
	add	sp, 10
	mov	word [gvar], ax
	; >>>>> Line:	26
	; >>>>> print("Result 3 is: ", 13); 
	mov	ax, 13
	push	ax
	mov	ax, L_lab1test_8
	push	ax
	call	print
	add	sp, 4
	; >>>>> Line:	27
	; >>>>> printInt(gvar); 
	push	word [gvar]
	call	printInt
	add	sp, 2
	; >>>>> Line:	28
	; >>>>> printNewLine(); 
	call	printNewLine
	; >>>>> Line:	30
	; >>>>> pri 
	call	printNewLine
	mov	sp, bp
	pop	bp
	ret
L_lab1test_9:
	push	bp
	mov	bp, sp
	jmp	L_lab1test_10
	ALIGN	2
gvar:
	TIMES	2 db 0
